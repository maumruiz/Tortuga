
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\x8d\x95\xcc\x15hN\xa6\xa0c\xc0\xc7\xc2s\xa8\xb5_'
    
_lr_action_items = {'PARENTESISD':([36,37,39,40,41,42,43,44,48,49,53,54,55,58,59,65,66,67,68,69,71,72,79,80,81,82,83,84,85,86,87,],[52,-44,-45,-48,-48,-48,-47,-46,-48,73,79,-30,-33,-25,-29,-37,-40,-43,-42,-21,-22,-24,-41,-32,-31,-28,-27,-26,-39,-38,-23,]),'CTESTRING':([30,37,39,40,41,42,43,44,47,54,55,58,59,65,66,67,68,70,79,80,81,82,83,84,85,86,],[48,-44,-45,-48,-48,-48,-47,-46,48,-30,-33,-25,-29,-37,-40,-43,-42,48,-41,-32,-31,-28,-27,-26,-39,-38,]),'PARENTESISI':([19,20,29,30,31,37,38,39,40,41,42,43,44,47,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,79,80,81,82,83,84,85,86,],[29,30,38,38,38,-44,38,-45,-48,-48,-48,-47,-46,38,-30,-33,38,38,-25,-29,38,38,38,38,38,-37,-40,-43,-42,38,-41,-32,-31,-28,-27,-26,-39,-38,]),'IGUAL':([21,],[31,]),'VAR':([4,],[7,]),'PROGRAM':([0,],[1,]),'MULTIP':([37,39,42,43,44,67,68,79,],[-44,-45,64,-47,-46,-43,-42,-41,]),'PRINT':([8,15,16,18,22,74,88,92,],[20,-16,20,-17,-18,-19,-20,-34,]),'RESTA':([29,30,31,37,38,39,40,41,42,43,44,47,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,79,80,81,82,83,84,85,86,],[45,45,45,-44,45,-45,56,-48,-48,-47,-46,45,-30,-33,45,45,-25,-29,45,45,45,45,45,-37,-40,-43,-42,45,-41,-32,-31,-28,-27,-26,-39,-38,]),'SUMA':([29,30,31,37,38,39,40,41,42,43,44,47,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,79,80,81,82,83,84,85,86,],[46,46,46,-44,46,-45,57,-48,-48,-47,-46,46,-30,-33,46,46,-25,-29,46,46,46,46,46,-37,-40,-43,-42,46,-41,-32,-31,-28,-27,-26,-39,-38,]),'DOSPUNTOS':([12,13,25,26,35,],[23,-48,-8,-6,-7,]),'MAYOR':([37,39,40,41,42,43,44,54,55,65,66,67,68,79,80,81,85,86,],[-44,-45,-48,62,-48,-47,-46,-30,-33,-37,-40,-43,-42,-41,-32,-31,-39,-38,]),'$end':([2,5,9,10,27,],[0,-1,-3,-2,-13,]),'DIVISION':([37,39,42,43,44,67,68,79,],[-44,-45,63,-47,-46,-43,-42,-41,]),'ELSE':([27,78,],[-13,90,]),'LLAVED':([8,14,15,16,17,18,22,28,74,88,92,],[-48,27,-16,-48,-15,-17,-18,-14,-19,-20,-34,]),'PUNTOYCOMA':([3,27,32,33,34,37,39,40,41,42,43,44,50,54,55,58,59,65,66,67,68,73,78,79,80,81,82,83,84,85,86,89,91,93,],[4,-13,51,-11,-12,-44,-45,-48,-48,-48,-47,-46,74,-30,-33,-25,-29,-37,-40,-43,-42,88,-48,-41,-32,-31,-28,-27,-26,-39,-38,92,-36,-35,]),'COMA':([13,48,],[24,70,]),'LLAVEI':([4,6,11,51,52,75,76,77,90,],[8,8,-4,-48,8,-9,-5,-10,8,]),'ID':([1,7,8,15,16,18,22,24,29,30,31,37,38,39,40,41,42,43,44,45,46,47,51,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,74,79,80,81,82,83,84,85,86,88,92,],[3,13,21,-16,21,-17,-18,13,39,39,39,-44,39,-45,-48,-48,-48,-47,-46,39,39,39,13,-30,-33,39,39,-25,-29,39,39,39,39,39,-37,-40,-43,-42,39,-19,-41,-32,-31,-28,-27,-26,-39,-38,-20,-34,]),'IF':([8,15,16,18,22,74,88,92,],[19,-16,19,-17,-18,-19,-20,-34,]),'DIFERENTE':([37,39,40,41,42,43,44,54,55,65,66,67,68,79,80,81,85,86,],[-44,-45,-48,60,-48,-47,-46,-30,-33,-37,-40,-43,-42,-41,-32,-31,-39,-38,]),'INT':([23,],[33,]),'FLOAT':([23,],[34,]),'MENOR':([37,39,40,41,42,43,44,54,55,65,66,67,68,79,80,81,85,86,],[-44,-45,-48,61,-48,-47,-46,-30,-33,-37,-40,-43,-42,-41,-32,-31,-39,-38,]),'CTEF':([29,30,31,37,38,39,40,41,42,43,44,45,46,47,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,79,80,81,82,83,84,85,86,],[43,43,43,-44,43,-45,-48,-48,-48,-47,-46,43,43,43,-30,-33,43,43,-25,-29,43,43,43,43,43,-37,-40,-43,-42,43,-41,-32,-31,-28,-27,-26,-39,-38,]),'CTEI':([29,30,31,37,38,39,40,41,42,43,44,45,46,47,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,79,80,81,82,83,84,85,86,],[44,44,44,-44,44,-45,-48,-48,-48,-47,-46,44,44,44,-30,-33,44,44,-25,-29,44,44,44,44,44,-37,-40,-43,-42,44,-41,-32,-31,-28,-27,-26,-39,-38,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'prog1':([4,],[5,]),'cond1':([78,],[89,]),'vars':([4,],[6,]),'expres1':([41,],[58,]),'termino':([29,30,31,38,47,56,57,60,61,62,63,64,70,],[40,40,40,40,40,40,40,40,40,40,85,86,40,]),'bloque':([4,6,52,90,],[9,10,78,93,]),'varcte':([29,30,31,38,45,46,47,56,57,60,61,62,63,64,70,],[37,37,37,37,67,68,37,37,37,37,37,37,37,37,37,]),'tipo':([23,],[32,]),'exp1':([40,],[54,]),'estatuto':([8,16,],[16,16,]),'escr1':([30,47,70,],[49,69,87,]),'escr2':([48,],[71,]),'program':([0,],[2,]),'factor':([29,30,31,38,47,56,57,60,61,62,63,64,70,],[42,42,42,42,42,42,42,42,42,42,42,42,42,]),'var21':([13,],[26,]),'var1':([7,51,],[11,75,]),'var3':([51,],[76,]),'var2':([7,24,51,],[12,35,12,]),'condicion':([8,16,],[18,18,]),'term1':([42,],[65,]),'expresion':([29,30,31,38,47,70,],[36,47,50,53,47,47,]),'bloque1':([8,16,],[14,28,]),'asignacion':([8,16,],[15,15,]),'vacio':([8,13,16,40,41,42,48,51,78,],[17,25,17,55,59,66,72,77,91,]),'exp':([29,30,31,38,47,56,57,60,61,62,70,],[41,41,41,41,41,80,81,82,83,84,41,]),'escritura':([8,16,],[22,22,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID PUNTOYCOMA prog1','program',4,'p_programa','littleduck.py',128),
  ('prog1 -> vars bloque','prog1',2,'p_prog1','littleduck.py',133),
  ('prog1 -> bloque','prog1',1,'p_prog1','littleduck.py',134),
  ('vars -> VAR var1','vars',2,'p_vars','littleduck.py',138),
  ('var1 -> var2 DOSPUNTOS tipo PUNTOYCOMA var3','var1',5,'p_var1','littleduck.py',142),
  ('var2 -> ID var21','var2',2,'p_var2','littleduck.py',146),
  ('var21 -> COMA var2','var21',2,'p_var21','littleduck.py',150),
  ('var21 -> vacio','var21',1,'p_var21','littleduck.py',151),
  ('var3 -> var1','var3',1,'p_var3','littleduck.py',155),
  ('var3 -> vacio','var3',1,'p_var3','littleduck.py',156),
  ('tipo -> INT','tipo',1,'p_tipo','littleduck.py',160),
  ('tipo -> FLOAT','tipo',1,'p_tipo','littleduck.py',161),
  ('bloque -> LLAVEI bloque1 LLAVED','bloque',3,'p_bloque','littleduck.py',165),
  ('bloque1 -> estatuto bloque1','bloque1',2,'p_bloque1','littleduck.py',169),
  ('bloque1 -> vacio','bloque1',1,'p_bloque1','littleduck.py',170),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','littleduck.py',174),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','littleduck.py',175),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','littleduck.py',176),
  ('asignacion -> ID IGUAL expresion PUNTOYCOMA','asignacion',4,'p_asignacion','littleduck.py',180),
  ('escritura -> PRINT PARENTESISI escr1 PARENTESISD PUNTOYCOMA','escritura',5,'p_escritura','littleduck.py',184),
  ('escr1 -> expresion escr1','escr1',2,'p_escr1','littleduck.py',188),
  ('escr1 -> CTESTRING escr2','escr1',2,'p_escr1','littleduck.py',189),
  ('escr2 -> COMA escr1','escr2',2,'p_escr2','littleduck.py',193),
  ('escr2 -> vacio','escr2',1,'p_escr2','littleduck.py',194),
  ('expresion -> exp expres1','expresion',2,'p_expresion','littleduck.py',198),
  ('expres1 -> MAYOR exp','expres1',2,'p_expres1','littleduck.py',202),
  ('expres1 -> MENOR exp','expres1',2,'p_expres1','littleduck.py',203),
  ('expres1 -> DIFERENTE exp','expres1',2,'p_expres1','littleduck.py',204),
  ('expres1 -> vacio','expres1',1,'p_expres1','littleduck.py',205),
  ('exp -> termino exp1','exp',2,'p_exp','littleduck.py',209),
  ('exp1 -> SUMA exp','exp1',2,'p_exp1','littleduck.py',213),
  ('exp1 -> RESTA exp','exp1',2,'p_exp1','littleduck.py',214),
  ('exp1 -> vacio','exp1',1,'p_exp1','littleduck.py',215),
  ('condicion -> IF PARENTESISI expresion PARENTESISD bloque cond1 PUNTOYCOMA','condicion',7,'p_condicion','littleduck.py',219),
  ('cond1 -> ELSE bloque','cond1',2,'p_cond1','littleduck.py',223),
  ('cond1 -> vacio','cond1',1,'p_cond1','littleduck.py',224),
  ('termino -> factor term1','termino',2,'p_termino','littleduck.py',228),
  ('term1 -> MULTIP termino','term1',2,'p_term1','littleduck.py',232),
  ('term1 -> DIVISION termino','term1',2,'p_term1','littleduck.py',233),
  ('term1 -> vacio','term1',1,'p_term1','littleduck.py',234),
  ('factor -> PARENTESISI expresion PARENTESISD','factor',3,'p_factor','littleduck.py',238),
  ('factor -> SUMA varcte','factor',2,'p_factor','littleduck.py',239),
  ('factor -> RESTA varcte','factor',2,'p_factor','littleduck.py',240),
  ('factor -> varcte','factor',1,'p_factor','littleduck.py',241),
  ('varcte -> ID','varcte',1,'p_varcte','littleduck.py',245),
  ('varcte -> CTEI','varcte',1,'p_varcte','littleduck.py',246),
  ('varcte -> CTEF','varcte',1,'p_varcte','littleduck.py',247),
  ('vacio -> <empty>','vacio',0,'p_vacio','littleduck.py',251),
]
