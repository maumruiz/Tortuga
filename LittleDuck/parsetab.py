
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '8D95CC15684EA6A063C0C7C273A8B55F'
    
_lr_action_items = {'PRINT':([8,13,15,16,17,72,82,93,],[12,-18,-17,12,-16,-19,-20,-34,]),'FLOAT':([28,],[48,]),'PROGRAM':([0,],[1,]),'PARENTESISI':([12,19,23,24,27,34,35,36,37,38,39,41,43,44,51,52,55,56,57,58,59,62,63,64,65,66,68,69,70,71,76,77,78,79,80,81,83,84,],[23,27,36,36,36,-47,-48,36,36,-45,-48,-44,-48,-46,-42,36,-29,36,-25,36,36,-40,36,36,-37,-43,-33,36,-30,36,-28,-27,-26,-41,-38,-39,-31,-32,]),'CTEI':([23,24,27,32,34,35,36,37,38,39,40,41,43,44,51,52,55,56,57,58,59,62,63,64,65,66,68,69,70,71,76,77,78,79,80,81,83,84,],[44,44,44,44,-47,-48,44,44,-45,-48,44,-44,-48,-46,-42,44,-29,44,-25,44,44,-40,44,44,-37,-43,-33,44,-30,44,-28,-27,-26,-41,-38,-39,-31,-32,]),'LLAVEI':([4,6,21,73,74,86,87,88,90,],[8,8,-4,8,-48,-10,-9,-5,8,]),'MENOR':([34,35,38,39,41,43,44,51,62,65,66,68,70,79,80,81,83,84,],[-47,58,-45,-48,-44,-48,-46,-42,-40,-37,-43,-33,-30,-41,-38,-39,-31,-32,]),'LLAVED':([8,11,13,15,16,17,18,25,72,82,93,],[-48,-15,-18,-17,-48,-16,26,-14,-19,-20,-34,]),'MULTIP':([34,38,39,41,44,51,66,79,],[-47,-45,63,-44,-46,-42,-43,-41,]),'IGUAL':([14,],[24,]),'DIVISION':([34,38,39,41,44,51,66,79,],[-47,-45,64,-44,-46,-42,-43,-41,]),'PUNTOYCOMA':([3,26,34,35,38,39,41,43,44,45,47,48,49,51,55,57,62,65,66,67,68,70,76,77,78,79,80,81,83,84,85,89,91,92,],[4,-13,-47,-48,-45,-48,-44,-48,-46,72,-11,-12,74,-42,-29,-25,-40,-37,-43,82,-33,-30,-28,-27,-26,-41,-38,-39,-31,-32,-48,-36,93,-35,]),'CTEF':([23,24,27,32,34,35,36,37,38,39,40,41,43,44,51,52,55,56,57,58,59,62,63,64,65,66,68,69,70,71,76,77,78,79,80,81,83,84,],[34,34,34,34,-47,-48,34,34,-45,-48,34,-44,-48,-46,-42,34,-29,34,-25,34,34,-40,34,34,-37,-43,-33,34,-30,34,-28,-27,-26,-41,-38,-39,-31,-32,]),'IF':([8,13,15,16,17,72,82,93,],[19,-18,-17,19,-16,-19,-20,-34,]),'$end':([2,5,7,10,26,],[0,-3,-1,-2,-13,]),'SUMA':([23,24,27,34,35,36,37,38,39,41,43,44,51,52,55,56,57,58,59,62,63,64,65,66,68,69,70,71,76,77,78,79,80,81,83,84,],[32,32,32,-47,-48,32,32,-45,-48,-44,69,-46,-42,32,-29,32,-25,32,32,-40,32,32,-37,-43,-33,32,-30,32,-28,-27,-26,-41,-38,-39,-31,-32,]),'CTESTRING':([23,34,35,37,38,39,41,43,44,51,52,55,57,62,65,66,68,70,76,77,78,79,80,81,83,84,],[33,-47,-48,33,-45,-48,-44,-48,-46,-42,33,-29,-25,-40,-37,-43,-33,-30,-28,-27,-26,-41,-38,-39,-31,-32,]),'DOSPUNTOS':([20,22,30,31,50,],[28,-48,-8,-6,-7,]),'ID':([1,8,9,13,15,16,17,23,24,27,29,32,34,35,36,37,38,39,40,41,43,44,51,52,55,56,57,58,59,62,63,64,65,66,68,69,70,71,72,74,76,77,78,79,80,81,82,83,84,93,],[3,14,22,-18,-17,14,-16,38,38,38,22,38,-47,-48,38,38,-45,-48,38,-44,-48,-46,-42,38,-29,38,-25,38,38,-40,38,38,-37,-43,-33,38,-30,38,-19,22,-28,-27,-26,-41,-38,-39,-20,-31,-32,-34,]),'MAYOR':([34,35,38,39,41,43,44,51,62,65,66,68,70,79,80,81,83,84,],[-47,59,-45,-48,-44,-48,-46,-42,-40,-37,-43,-33,-30,-41,-38,-39,-31,-32,]),'VAR':([4,],[9,]),'INT':([28,],[47,]),'DIFERENTE':([34,35,38,39,41,43,44,51,62,65,66,68,70,79,80,81,83,84,],[-47,56,-45,-48,-44,-48,-46,-42,-40,-37,-43,-33,-30,-41,-38,-39,-31,-32,]),'PARENTESISD':([33,34,35,38,39,41,42,43,44,46,51,53,54,55,57,60,61,62,65,66,68,70,75,76,77,78,79,80,81,83,84,],[-48,-47,-48,-45,-48,-44,67,-48,-46,73,-42,-22,-24,-29,-25,79,-21,-40,-37,-43,-33,-30,-23,-28,-27,-26,-41,-38,-39,-31,-32,]),'ELSE':([26,85,],[-13,90,]),'COMA':([22,33,],[29,52,]),'RESTA':([23,24,27,34,35,36,37,38,39,41,43,44,51,52,55,56,57,58,59,62,63,64,65,66,68,69,70,71,76,77,78,79,80,81,83,84,],[40,40,40,-47,-48,40,40,-45,-48,-44,71,-46,-42,40,-29,40,-25,40,40,-40,40,40,-37,-43,-33,40,-30,40,-28,-27,-26,-41,-38,-39,-31,-32,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'vacio':([8,16,22,33,35,39,43,74,85,],[11,11,30,54,55,62,68,86,89,]),'bloque':([4,6,73,90,],[5,10,85,92,]),'escritura':([8,16,],[13,13,]),'exp':([23,24,27,36,37,52,56,58,59,69,71,],[35,35,35,35,35,35,76,77,78,83,84,]),'var3':([74,],[88,]),'var2':([9,29,74,],[20,50,20,]),'escr2':([33,],[53,]),'asignacion':([8,16,],[17,17,]),'varcte':([23,24,27,32,36,37,40,52,56,58,59,63,64,69,71,],[41,41,41,51,41,41,66,41,41,41,41,41,41,41,41,]),'var21':([22,],[31,]),'prog1':([4,],[7,]),'termino':([23,24,27,36,37,52,56,58,59,63,64,69,71,],[43,43,43,43,43,43,43,43,43,80,81,43,43,]),'tipo':([28,],[49,]),'cond1':([85,],[91,]),'expresion':([23,24,27,36,37,52,],[37,45,46,60,37,37,]),'condicion':([8,16,],[15,15,]),'factor':([23,24,27,36,37,52,56,58,59,63,64,69,71,],[39,39,39,39,39,39,39,39,39,39,39,39,39,]),'estatuto':([8,16,],[16,16,]),'program':([0,],[2,]),'escr1':([23,37,52,],[42,61,75,]),'vars':([4,],[6,]),'bloque1':([8,16,],[18,25,]),'expres1':([35,],[57,]),'var1':([9,74,],[21,87,]),'exp1':([43,],[70,]),'term1':([39,],[65,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID PUNTOYCOMA prog1','program',4,'p_programa','littleduck.py',128),
  ('prog1 -> vars bloque','prog1',2,'p_prog1','littleduck.py',133),
  ('prog1 -> bloque','prog1',1,'p_prog1','littleduck.py',134),
  ('vars -> VAR var1','vars',2,'p_vars','littleduck.py',138),
  ('var1 -> var2 DOSPUNTOS tipo PUNTOYCOMA var3','var1',5,'p_var1','littleduck.py',142),
  ('var2 -> ID var21','var2',2,'p_var2','littleduck.py',146),
  ('var21 -> COMA var2','var21',2,'p_var21','littleduck.py',150),
  ('var21 -> vacio','var21',1,'p_var21','littleduck.py',151),
  ('var3 -> var1','var3',1,'p_var3','littleduck.py',155),
  ('var3 -> vacio','var3',1,'p_var3','littleduck.py',156),
  ('tipo -> INT','tipo',1,'p_tipo','littleduck.py',160),
  ('tipo -> FLOAT','tipo',1,'p_tipo','littleduck.py',161),
  ('bloque -> LLAVEI bloque1 LLAVED','bloque',3,'p_bloque','littleduck.py',165),
  ('bloque1 -> estatuto bloque1','bloque1',2,'p_bloque1','littleduck.py',169),
  ('bloque1 -> vacio','bloque1',1,'p_bloque1','littleduck.py',170),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','littleduck.py',174),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','littleduck.py',175),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','littleduck.py',176),
  ('asignacion -> ID IGUAL expresion PUNTOYCOMA','asignacion',4,'p_asignacion','littleduck.py',180),
  ('escritura -> PRINT PARENTESISI escr1 PARENTESISD PUNTOYCOMA','escritura',5,'p_escritura','littleduck.py',184),
  ('escr1 -> expresion escr1','escr1',2,'p_escr1','littleduck.py',188),
  ('escr1 -> CTESTRING escr2','escr1',2,'p_escr1','littleduck.py',189),
  ('escr2 -> COMA escr1','escr2',2,'p_escr2','littleduck.py',193),
  ('escr2 -> vacio','escr2',1,'p_escr2','littleduck.py',194),
  ('expresion -> exp expres1','expresion',2,'p_expresion','littleduck.py',198),
  ('expres1 -> MAYOR exp','expres1',2,'p_expres1','littleduck.py',202),
  ('expres1 -> MENOR exp','expres1',2,'p_expres1','littleduck.py',203),
  ('expres1 -> DIFERENTE exp','expres1',2,'p_expres1','littleduck.py',204),
  ('expres1 -> vacio','expres1',1,'p_expres1','littleduck.py',205),
  ('exp -> termino exp1','exp',2,'p_exp','littleduck.py',209),
  ('exp1 -> SUMA exp','exp1',2,'p_exp1','littleduck.py',213),
  ('exp1 -> RESTA exp','exp1',2,'p_exp1','littleduck.py',214),
  ('exp1 -> vacio','exp1',1,'p_exp1','littleduck.py',215),
  ('condicion -> IF PARENTESISI expresion PARENTESISD bloque cond1 PUNTOYCOMA','condicion',7,'p_condicion','littleduck.py',219),
  ('cond1 -> ELSE bloque','cond1',2,'p_cond1','littleduck.py',223),
  ('cond1 -> vacio','cond1',1,'p_cond1','littleduck.py',224),
  ('termino -> factor term1','termino',2,'p_termino','littleduck.py',228),
  ('term1 -> MULTIP termino','term1',2,'p_term1','littleduck.py',232),
  ('term1 -> DIVISION termino','term1',2,'p_term1','littleduck.py',233),
  ('term1 -> vacio','term1',1,'p_term1','littleduck.py',234),
  ('factor -> PARENTESISI expresion PARENTESISD','factor',3,'p_factor','littleduck.py',238),
  ('factor -> SUMA varcte','factor',2,'p_factor','littleduck.py',239),
  ('factor -> RESTA varcte','factor',2,'p_factor','littleduck.py',240),
  ('factor -> varcte','factor',1,'p_factor','littleduck.py',241),
  ('varcte -> ID','varcte',1,'p_varcte','littleduck.py',245),
  ('varcte -> CTEI','varcte',1,'p_varcte','littleduck.py',246),
  ('varcte -> CTEF','varcte',1,'p_varcte','littleduck.py',247),
  ('vacio -> <empty>','vacio',0,'p_vacio','littleduck.py',251),
]
